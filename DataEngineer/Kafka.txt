kafka가 만들어진 이유는 서비스간의 결합이 너무 강하면 특정 서비스에 장애가 생겼을 시에 그 장애가 다른 서비스로 전파가 되어버린다.
그래서 서버,서비스 간의 결합을 느슨하게 하기 위해서 중앙에 미들웨어 같은 완충장치를 놓게 되었고 그게 카프카이다.
카프카는 중앙에서 메세지(데이터)를 관리하고 각 서버,서비스들은 kafka로 메세지를 produce 하고, 그 메세지를 필요로하는 서버,서비스는 kafka에 들어온 메세지를 
consume한다. 즉 producer는 누가 이 메세지를 사용하든 말든 단순히 Kafka에 메세지를 쏘는 것이고, consumer는 누가 이 메세지를 produce 했는지는 관심없고, 
단지 그 메세지를 사용할 뿐이다.

https://github.com/spacetime101/fastcampus-kafka 강의 소스코드 

jdk있어야 kafka실행가능 
brew tap AdoptOpenJDK/openjdk  : brew tap 은 모듈 레포지토리를 brew 환경에 추가한다는 뜻
brew install --cask adoptopenjdk8 : brew 환경에서 레포지토리 모듈 다운 --cask는 보통 GUI 프로그램을 brew에서 다운받기위해 쓰임.
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8) : version 변경 
java -version

kafka 설치 및 실행됨
https://kafka.apache.org/downloads  2.8.2버전 binanry zip파일 다운로드 
tar -zxf kafka_2.13-2.8.2.tgz
cd kafka_2.13-2.8.2
bin/zookeeper-server-start.sh config/zookeeper.properties : zookeeper 실행해야 kafka 실행가능
vi config/server.properties 
advertised.listeners 부분 주석 해제하고 localhost:9092로 수정 
bin/kafka-server-start.sh config/server.properties : kafka 서버 실행
bin/kafka-topics.sh --create --topic topic-example1 --bootstrap-server localhost:9092
bin/kafka-topics.sh --describe --topic topic-example1 --bootstrap-server localhost:9092
bin/kafka-console-producer.sh --topic topic-example1 --bootstrap-server localhost:9092
    producer서버 실행 후 메세지 입력
bin/kafka-console-consumer.sh --topic topic-example1 --from-beginning --bootstrap-server localhost:9092
    consumer서버 실행후 producer서버에서 입력하는 값들을 볼 수 있음